/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsEnum } from "class-validator";
import { FeedbackCreateNestedManyWithoutCandidatesInput } from "./FeedbackCreateNestedManyWithoutCandidatesInput";
import { Type } from "class-transformer";
import { InterviewCreateNestedManyWithoutCandidatesInput } from "./InterviewCreateNestedManyWithoutCandidatesInput";
import { ResumeCreateNestedManyWithoutCandidatesInput } from "./ResumeCreateNestedManyWithoutCandidatesInput";
import { EnumCandidateStatus } from "./EnumCandidateStatus";

@InputType()
class CandidateCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackCreateNestedManyWithoutCandidatesInput,
  })
  @ValidateNested()
  @Type(() => FeedbackCreateNestedManyWithoutCandidatesInput)
  @IsOptional()
  @Field(() => FeedbackCreateNestedManyWithoutCandidatesInput, {
    nullable: true,
  })
  feedbacks?: FeedbackCreateNestedManyWithoutCandidatesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InterviewCreateNestedManyWithoutCandidatesInput,
  })
  @ValidateNested()
  @Type(() => InterviewCreateNestedManyWithoutCandidatesInput)
  @IsOptional()
  @Field(() => InterviewCreateNestedManyWithoutCandidatesInput, {
    nullable: true,
  })
  interviews?: InterviewCreateNestedManyWithoutCandidatesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => ResumeCreateNestedManyWithoutCandidatesInput,
  })
  @ValidateNested()
  @Type(() => ResumeCreateNestedManyWithoutCandidatesInput)
  @IsOptional()
  @Field(() => ResumeCreateNestedManyWithoutCandidatesInput, {
    nullable: true,
  })
  resumes?: ResumeCreateNestedManyWithoutCandidatesInput;

  @ApiProperty({
    required: false,
    enum: EnumCandidateStatus,
  })
  @IsEnum(EnumCandidateStatus)
  @IsOptional()
  @Field(() => EnumCandidateStatus, {
    nullable: true,
  })
  status?: "Option1" | null;
}

export { CandidateCreateInput as CandidateCreateInput };
